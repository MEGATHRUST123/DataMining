
# Problem 4.3.a
set.seed(20174510)
setwd("C:/Users/kell0021/Desktop")
toy<-read.csv("toyexdata.csv",header=T)
toy$y=as.factor(toy$y)
train <- sample(nrow(toy), 0.7 * nrow(toy))
toy.train <- toy[train, ]
toy.test <- toy[-train, ]
toy.fit <- glm(y ~ ., data = toy.train, family = binomial(link = logit))
toy.prob <- predict(toy.fit, type = "response", newdata = toy.test) 
toy.pred <- rep('0', nrow(toy.test))
toy.pred[toy.prob > 0.5] <- '1'
table(toy.pred, toy.test$y)
mean(toy.pred == toy.test$y)
# The overall fraction of correct predictions is 0.4333.

# Problem 4.3.b
set.seed(20174510)
# install.packages("nnet")
library(nnet)

# Standardisation 
t.mean <- apply(toy[train, -1], 2, mean)
t.sd <- apply(toy[train, -1], 2, sd)
toy.scaled <- data.frame(scale(x = toy[-1],
center = t.mean,
scale = t.sd),
y = toy[1])
toy.train <- toy.scaled[train, ]
toy.test <- toy.scaled[-train, ]

toy.nn.rep<-nnet(y~.,data=toy.train,size=2,linout=FALSE,trace=FALSE,maxit = 500)
summary(toy.nn.rep)
toy.nn.pred <- predict(toy.nn.rep, toy.test, type = "class")
table(toy.nn.pred, toy.test$y)
mean(toy.nn.pred == toy.test$y)
# The overall fraction of correct predictions is 0.65.


# Problem 4.3.e
set.seed(20174510)
nn.rep <- function(rep, ...) {
  v.min <- Inf 
  for (r in 1:rep) { 
    nn.temp <- nnet(...) 
    v.temp <- nn.temp$value 
    if (v.temp < v.min) { 
      v.min <- v.temp
      nn.min <- nn.temp
    }
  }
  return(nn.min)
}
toy.nn.rep1<-nn.rep(rep=100,y~.,data=toy.train,size=2,linout=FALSE,trace=FALSE)
summary(toy.nn.rep1)
toy.nn.pred1 <- predict(toy.nn.rep1, toy.test, type = "class")
table(toy.nn.pred1, toy.test$y)
mean(toy.nn.pred1 == toy.test$y)

# The overall fraction of correct predictions is 0.75.
























